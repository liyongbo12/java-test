一、接口
1.针对接口编程是计算机重要思维
2.代码复用
3.一套代码可以处理不同类型的对象
4.接口更重要的降低了耦合,提高了灵活
5.使用接口是依赖接口本身,不是实现类
6.将复杂的问题分解小问题,小问题之间还是有一点关系
7.分解的核心是降低耦合度,提高灵活性,接口可以做到分解

二、继承
1.复用代码
2.利用多态统一处理不同类型的子类对象
3.使用组合可以复用代码，但不能统一
4.接口可以利用多态统一处理不同类型的子类对象，不能复用
5.组合和接口可以结合使用解决复用和统一不同类型的子类对象

三、抽象类
抽象类和接口是不同的。
1.接口不能定义实例变量
2.抽象类可以,可以实现多个接口,只能继承一个类
3.抽象类和接口经常配合使用,接口声明,抽象类提供默认实现,实现全部或部分方法。
4.实现接口的实现类,有二个方法,一个实现,实现全部接口方法。另一个是继承抽象类,根据需要重写方法

三、内部类
1.可以更好的封装,代码更简洁
2.虚拟机会编译成一个个独立的类,生成一个独立的子节吗文件
3.内部类可以方便地访问外部类的私有变量,声明private更好的隐藏,代码写在一起
4.有四种,静态、成员、方法、匿名

四、枚举
1.每个枚举都有name()方法,返回值toString()
2.枚举可以== 和equals比较
